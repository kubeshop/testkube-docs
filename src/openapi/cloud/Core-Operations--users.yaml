openapi: 3.0.1
info:
  title: Testkube Pro API
  description: API for Testkube Pro
  contact:
    email: testkube@kubeshop.io
  license:
    name: COMMERICAL
    url: https://opensource.org/licenses/MIT
  version: cloud-api/1.10.51
servers:
  - url: https://api.testkube.io
    description: Testkube Cloud API Endpoint
  - url: https://<your-testkube-api-host>
    description: Testkube On-Prem API Endpoint
paths:
  /users:
    get:
      summary: List users
      description: List users
      operationId: listUsers
      parameters:
        - $ref: './components.yaml#/components/parameters/Limit'
      responses:
        '200':
          $ref: './components.yaml#/components/responses/Users'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
      security:
        - BearerAuth: []
    post:
      summary: Create new user
      description: Create user
      operationId: createUser
      requestBody:
        $ref: './components.yaml#/components/requestBodies/User'
      responses:
        '200':
          $ref: './components.yaml#/components/responses/User'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
      security:
        - BearerAuth: []
  /users/{id}:
    get:
      summary: Get user by ID
      description: Get user by ID
      operationId: getUser
      responses:
        '200':
          $ref: './components.yaml#/components/responses/User'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
      security:
        - BearerAuth: []
    delete:
      summary: Delete user
      description: Deletes user
      operationId: deleteUser
      responses:
        '204':
          $ref: './components.yaml#/components/responses/NoContent'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
      security:
        - BearerAuth: []
    patch:
      summary: Update user
      description: Update user with given request body
      operationId: updateUser
      requestBody:
        $ref: './components.yaml#/components/requestBodies/User'
      responses:
        '200':
          $ref: './components.yaml#/components/responses/User'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
      security:
        - BearerAuth: []
    parameters:
      - $ref: './components.yaml#/components/parameters/ID'
  /users/{id}/settings:
    get:
      summary: User settings, global for Testkube Pro or Enterprise
      description: Get API info like current version
      operationId: getUserSettings
      responses:
        '200':
          $ref: './components.yaml#/components/responses/Settings'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    patch:
      summary: Update setting for given parameter
      description: Update setting for given user
      operationId: updateUserSettings
      requestBody:
        $ref: './components.yaml#/components/requestBodies/SettingUpsert'
      responses:
        '200':
          $ref: './components.yaml#/components/responses/Setting'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '405':
          $ref: './components.yaml#/components/responses/MethodNotAllowedError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    parameters:
      - $ref: './components.yaml#/components/parameters/ID'
