openapi: 3.0.1
info:
  title: Testkube Pro API
  description: API for Testkube Pro
  contact:
    email: testkube@kubeshop.io
  license:
    name: COMMERICAL
    url: https://opensource.org/licenses/MIT
  version: 1.16.0-de.53
servers:
  - url: https://api.testkube.io
    description: Testkube Cloud API Endpoint
  - url: https://<your-testkube-api-host>
    description: Testkube On-Prem API Endpoint
paths:
  /organizations/{id}/members:
    get:
      summary: Get organization members
      description: Get organizations members
      operationId: getOrganizationMembers
      responses:
        '200':
          $ref: './components.yaml#/components/responses/Members'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '402':
          $ref: './components.yaml#/components/responses/PaymentRequiredError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
      security:
        - BearerAuth: []
    parameters:
      - $ref: './components.yaml#/components/parameters/ID'
      - name: emailSearch
        in: query
        description: Filter members by email
        schema:
          type: string
  /organizations/{id}/members/{memberEmail}:
    delete:
      summary: Remove user from organization
      description: Remove user from organization
      operationId: deleteOrganizationMember
      responses:
        '204':
          $ref: './components.yaml#/components/responses/NoContent'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
      security:
        - BearerAuth: []
    patch:
      summary: Update org member role
      description: Update all organization members
      operationId: updateOrganizationMemberRole
      requestBody:
        $ref: './components.yaml#/components/requestBodies/MemberRoleChange'
      responses:
        '200':
          $ref: './components.yaml#/components/responses/Member'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '402':
          $ref: './components.yaml#/components/responses/PaymentRequiredError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
        '429':
          $ref: './components.yaml#/components/responses/TooManyRequests'
      security:
        - BearerAuth: []
    parameters:
      - $ref: './components.yaml#/components/parameters/ID'
      - $ref: './components.yaml#/components/parameters/MemberEmail'
  /organizations/{id}/members/{memberEmail}/permissions:
    get:
      summary: Get member permissions
      description: Retrieve the permissions for a specific member in an organization.
      operationId: getOrganizationMemberPermissions
      parameters:
        - name: id
          in: path
          description: The ID of the organization
          required: true
          schema:
            type: string
        - name: memberEmail
          in: path
          description: The email of the member
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: './components.yaml#/components/responses/MemberPermissionsResponse'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
