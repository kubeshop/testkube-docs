openapi: 3.0.1
info:
  title: Testkube Pro API
  description: API for Testkube Pro
  contact:
    email: testkube@kubeshop.io
  license:
    name: COMMERICAL
    url: https://opensource.org/licenses/MIT
  version: 1.16.0-de.53
servers:
  - url: https://api.testkube.io
    description: Testkube Cloud API Endpoint
  - url: https://<your-testkube-api-host>
    description: Testkube On-Prem API Endpoint
paths:
  /organizations/{id}/environments/{environmentID}/status-pages:
    get:
      summary: List status pages
      description: Returns a list of status pages
      operationId: listStatusPages
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
      responses:
        '200':
          $ref: './components.yaml#/components/responses/StatusPages'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    post:
      summary: Create new status page
      description: Creates a new status page
      operationId: createStatusPage
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
      requestBody:
        description: body passed to configure new status page
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/StatusPage'
      responses:
        '201':
          description: status page successfully created
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/StatusPage'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
  /organizations/{id}/environments/{environmentID}/status-pages/{statusPageID}:
    get:
      summary: Get status page by ID
      description: Returns a status page for the given statusPageId
      operationId: getStatusPage
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - name: statusPageID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/StatusPage'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    delete:
      summary: Delete a status page
      description: Deletes the status page with the given ID
      operationId: deleteStatusPage
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - name: statusPageID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: './components.yaml#/components/responses/NoContent'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    patch:
      summary: Update an existing status page
      description: Updates an existing status page
      operationId: updateStatusPage
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - name: statusPageID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: body passed to configure new status page
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/StatusPage'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/StatusPage'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
  /organizations/{id}/environments/{environmentID}/status-pages/{statusPageID}/incidents:
    get:
      summary: List incidents for a status page
      description: Returns the list of incidents assigned to a status page
      operationId: listIncidents
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - $ref: './components.yaml#/components/parameters/StatusPageID'
        - $ref: './components.yaml#/components/parameters/Visibility'
      responses:
        '200':
          $ref: './components.yaml#/components/responses/Incidents'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    post:
      summary: Create new incident
      description: Creates an incident
      operationId: createIncident
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - $ref: './components.yaml#/components/parameters/StatusPageID'
      requestBody:
        description: body passed to configure new incident
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/Incident'
      responses:
        '201':
          description: incident successfully created
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Incident'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
  /organizations/{id}/environments/{environmentID}/status-pages/{statusPageID}/incidents/{incidentID}:
    get:
      summary: Get incident by ID
      description: Returns an incident for the given incidentID
      operationId: getIncident
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - $ref: './components.yaml#/components/parameters/StatusPageID'
        - name: incidentID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Incident'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    delete:
      summary: Deletes an incident
      description: Deletes the incident with the given ID
      operationId: deleteIncident
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - $ref: './components.yaml#/components/parameters/StatusPageID'
        - name: incidentID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: './components.yaml#/components/responses/NoContent'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
    patch:
      summary: Updates an existing incident
      description: Updates an existing incident
      operationId: updateIncident
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/EnvironmentID'
        - $ref: './components.yaml#/components/parameters/StatusPageID'
        - name: incidentID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: body passed to configure new incident
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/Incident'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Incident'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
        '500':
          $ref: './components.yaml#/components/responses/InternalServerError'
