openapi: 3.0.1
info:
  title: Testkube Pro API
  description: API for Testkube Pro
  contact:
    email: testkube@kubeshop.io
  license:
    name: COMMERICAL
    url: https://opensource.org/licenses/MIT
  version: cloud-api/1.10.38
paths:
  /organizations/{id}/environments/{environmentID}/agent/executions/{executionID}/ai:
    get:
      summary: Generate OpenAI analysis websockets stream
      description: OpenAI analysis websockets stream
      operationId: executionAiAnalysis
      responses:
        '200':
          $ref: './components.yaml#/components/responses/NoContent'
        '400':
          $ref: './components.yaml#/components/responses/BadRequestError'
        '401':
          $ref: './components.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './components.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './components.yaml#/components/responses/NotFoundError'
        '409':
          $ref: './components.yaml#/components/responses/Conflict'
        '429':
          $ref: './components.yaml#/components/responses/TooManyRequests'
      security:
        - BearerAuth: []
    parameters:
      - $ref: './components.yaml#/components/parameters/ID'
      - $ref: './components.yaml#/components/parameters/EnvironmentID'
      - $ref: './components.yaml#/components/parameters/ExecutionID'
  /organizations/{id}/environments/{environmentId}/agent/executions:
    get:
      summary: Get all test executions
      description: Returns array of test executions
      operationId: listExecutions
      parameters:
        - $ref: './components.yaml#/components/parameters/TestName'
        - $ref: './components.yaml#/components/parameters/Type'
        - $ref: './components.yaml#/components/parameters/TextSearch'
        - $ref: './components.yaml#/components/parameters/PageSize'
        - $ref: './components.yaml#/components/parameters/PageIndex'
        - $ref: './components.yaml#/components/parameters/ExecutionsStatusFilter'
        - $ref: './components.yaml#/components/parameters/StartDateFilter'
        - $ref: './components.yaml#/components/parameters/EndDateFilter'
        - $ref: './components.yaml#/components/parameters/Selector'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/ExecutionsResult'
        '404':
          description: execution not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with getting test executions from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    post:
      summary: Starts new test executions
      description: >-
        New test executions returns new executions details on successful
        executions start
      operationId: executeTests
      parameters:
        - $ref: './components.yaml#/components/parameters/Namespace'
        - $ref: './components.yaml#/components/parameters/Selector'
        - $ref: './components.yaml#/components/parameters/ExecutionSelector'
        - $ref: './components.yaml#/components/parameters/ConcurrencyLevel'
      requestBody:
        description: body passed to configure executions
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/ExecutionRequest'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/ExecutionResult'
        '400':
          description: problem with request body
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '404':
          description: test not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with test executions
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with communicating with kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/executions/{executionID}:
    get:
      summary: Get test execution by ID
      description: Returns execution with given executionID
      operationId: getExecutionByID
      parameters:
        - $ref: './components.yaml#/components/parameters/executionID'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Execution'
        '404':
          description: execution not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with getting test executions from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with reading secrets from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/executions/{id}/artifact-archive:
    get:
      summary: Download artifact archive
      description: Download the artifact archive from the given execution
      operationId: downloadArchive
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/Mask'
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: execution not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with getting artifact archive from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/executions/{id}/artifacts:
    get:
      summary: Get execution's artifacts by ID
      description: Returns artifacts of the given executionID
      operationId: getExecutionArtifacts
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Artifact'
        '404':
          description: execution not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with getting execution's artifacts from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/executions/{id}/artifacts/{filename}:
    get:
      summary: Download artifact
      description: Download the artifact file from the given execution
      operationId: downloadFile
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/Filename'
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: execution not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with getting artifacts from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/executions/{id}/logs:
    get:
      summary: Get execution's logs by ID
      description: Returns logs of the given executionID
      operationId: getExecutionLogs
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/ExecutorOutput'
        '500':
          description: problem with getting execution's logs
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/executions/{id}/logs/v2:
    get:
      summary: Get execution's logs by ID version 2
      description: Returns logs of the given executionID version 2
      operationId: getExecutionLogsV2
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/LogV2'
        '500':
          description: problem with getting execution's logs version 2
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
