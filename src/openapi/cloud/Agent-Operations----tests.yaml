openapi: 3.0.1
info:
  title: Testkube Pro API
  description: API for Testkube Pro
  contact:
    email: testkube@kubeshop.io
  license:
    name: COMMERICAL
    url: https://opensource.org/licenses/MIT
  version: cloud-api/1.10.38
paths:
  /organizations/{id}/environments/{environmentId}/agent/tests:
    get:
      summary: List tests
      description: List available tests
      operationId: listTests
      parameters:
        - $ref: './components.yaml#/components/parameters/Selector'
        - $ref: './components.yaml#/components/parameters/TextSearch'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Test'
            text/yaml:
              schema:
                type: string
        '400':
          description: invalid parameters
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with read information from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    post:
      summary: Create new test
      description: Create new test based on file content, uri or git based data
      operationId: createTest
      requestBody:
        description: test details body
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/TestUpsertRequest'
          text/yaml:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            text/yaml:
              schema:
                type: string
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Test'
        '400':
          description: >-
            problem with test definition - probably some bad input occurs
            (invalid JSON body or similar)
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with communicating with kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    delete:
      summary: Delete tests
      description: Deletes all or labeled tests
      operationId: deleteTests
      parameters:
        - $ref: './components.yaml#/components/parameters/Selector'
      responses:
        '204':
          description: no content
        '404':
          description: no tests found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with deleting tests and their executions
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with read information from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/tests/{id}:
    get:
      summary: Get test
      description: Gets the specified test
      operationId: getTest
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Test'
            text/yaml:
              schema:
                type: string
        '400':
          description: invalid parameters
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '404':
          description: test not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with read information from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    delete:
      summary: Delete test
      description: Deletes a test
      operationId: deleteTest
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/SkipDeleteExecutions'
      responses:
        '204':
          description: no content
        '404':
          description: no tests found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with deleting test and its executions
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with read information from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    patch:
      summary: Update test
      description: Update test based on test content or git based data
      operationId: updateTest
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
      requestBody:
        description: test details body
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/TestUpdateRequest'
          text/yaml:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Test'
        '400':
          description: >-
            problem with test definition - probably some bad input occurs
            (invalid JSON body or similar)
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '404':
          description: test not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with communicating with kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/tests/{id}/abort:
    post:
      summary: Abort all executions of a test
      description: Abort all test executions
      operationId: abortTestExecutions
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
      responses:
        '204':
          description: no content
        '404':
          description: no execution found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with aborting test execution
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with read information from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/tests/{id}/executions:
    get:
      summary: Get all test executions
      description: Returns array of all available test executions
      operationId: listTestExecutions
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/LastNDays'
        - $ref: './components.yaml#/components/parameters/PageSize'
        - $ref: './components.yaml#/components/parameters/PageIndex'
        - $ref: './components.yaml#/components/parameters/ExecutionsStatusFilter'
        - $ref: './components.yaml#/components/parameters/StartDateFilter'
        - $ref: './components.yaml#/components/parameters/EndDateFilter'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/ExecutionsResult'
        '404':
          description: test or execution not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with getting test executions from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    post:
      summary: Starts new test execution
      description: >-
        New test execution returns new execution details on successful execution
        start
      operationId: executeTest
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/Namespace'
        - $ref: './components.yaml#/components/parameters/TestExecutionName'
      requestBody:
        description: body passed to configure execution
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/ExecutionRequest'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/ExecutionResult'
        '400':
          description: problem with request body
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '404':
          description: test not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with test execution
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with communicating with kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/tests/{id}/executions/{executionID}:
    get:
      summary: Get test execution
      description: Returns execution with given executionID
      operationId: getTestExecution
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/executionID'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/Execution'
        '404':
          description: execution not found
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '500':
          description: problem with getting test executions from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with reading secrets from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    patch:
      summary: Aborts execution
      description: Aborts execution with given executionID
      operationId: abortExecution
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/executionID'
      responses:
        '204':
          description: no content
        '502':
          description: problem with read information from kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
  /organizations/{id}/environments/{environmentId}/agent/tests/{id}/metrics:
    get:
      summary: Get test metrics
      description: >-
        Gets test metrics for given tests executions, with particular execution
        status and timings
      operationId: getTestMetrics
      parameters:
        - $ref: './components.yaml#/components/parameters/ID'
        - $ref: './components.yaml#/components/parameters/LastNDays'
        - $ref: './components.yaml#/components/parameters/Limit'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/ExecutionsMetrics'
        '500':
          description: problem with getting metrics
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem with read information from storage
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
    parameters:
      - name: id
        in: path
        description: organizationId
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: environmentID
        required: true
        schema:
          type: string
