openapi: 3.0.1
info:
  title: Testkube API
  description: >-
    Testkube provides a Kubernetes-native framework for test definition,
    execution and results
  contact:
    email: testkube@kubeshop.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: https://api.testkube.io
    description: Testkube Cloud API Endpoint
  - url: https://<your-testkube-api-host>
    description: Testkube On-Prem API Endpoint
paths:
  /preview-test-workflow:
    post:
      parameters:
        - $ref: './components.yaml#/components/parameters/InlineTemplates'
      summary: Preview test workflow
      description: Preview test workflow after including templates inside
      operationId: previewTestWorkflow
      requestBody:
        description: test workflow body
        required: true
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/TestWorkflow'
          text/yaml:
            schema:
              type: string
      responses:
        '200':
          description: resolved test workflow
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/TestWorkflow'
            text/yaml:
              schema:
                type: string
        '400':
          description: problem with body parsing - probably some bad input occurs
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '402':
          description: missing Pro subscription for a commercial feature
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
        '502':
          description: problem communicating with kubernetes cluster
          content:
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/Problem'
